
# Services (aka containers)
services:
  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    restart: always
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_USER_PASSWORD=${DB_USER_PASSWORD}
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - inception

  # wordpress:
  #   build: ./requirements/wordpress
  #   container_name: wordpress
  #   depends_on: mariadb
  #   restart: always
  #   env_file:
  #     - WP_ADMIN=${WP_ADMIN}
  #     - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
  #     - WP_ADMIN_EMAIL={WP_ADMIN_EMAIL}
  #     - WP_USER=${WP_USER}
  #     - WP_USER_PASSWORD=${WP_USER_PASSWORD}
  #     - WP_USER_EMAIL=${WP_USER_EMAIL}
  #   volumes:
  #     - wordpress:/var/www/html
  #   networks:
  #     - inception

  # nginx:
  #   build: ./requirements/nginx
  #   container_name: nginx
  #   depends_on:
  #     - wordpress
  #   restart: always
  #   env_file:
  #     - ./env
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - wordpress:/var/www/html
  #   networks:
  #     - inception
  

# Networks (for communication between services / containers)
networks:
  inception:
    driver: bridge
    name: inception


# Volumes (for persistant data)
volumes:
  # wordpress:
  #   name: wordpress_volume
  #   driver: local
  #   driver_opts:
  #     device: ${HOME}/data/wordpress
  #     type: none
  #     o: bind

  mariadb:
    name: mariadb_volume
    driver: local
    driver_opts:
      device: ${HOME}/data/mariadb
      type: none
      o: bind